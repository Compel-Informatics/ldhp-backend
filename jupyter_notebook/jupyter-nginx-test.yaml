apiVersion: v1
kind: Namespace
metadata:
  name: jupyter
---
apiVersion: v1
kind: Secret
metadata:
  name: access-token
  namespace: jupyter
type: Opaque
data:
  token: <base64-encoded-access-token>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: jupyter
data:
  default.conf: |
    server {
      listen 8081;
      server_name localhost;
      location / {
        proxy_pass http://localhost:8888;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Authorization "Bearer $(cat /var/run/secrets/access-token/token)";
      }
    }
---
apiVersion: v1
kind: Pod
metadata:
  name: jupyter-nginx
  namespace: jupyter
spec:
  containers:
    - name: jupyter
      image: tensorflow/tensorflow:latest-gpu-jupyter
      ports:
        - containerPort: 8081
      command: ["jupyter", "notebook", "--ip=0.0.0.0", "--allow-root"]
      volumeMounts:
        - name: access-token
          mountPath: /var/run/secrets/access-token
    - name: nginx
      image: nginx
      ports:
        - containerPort: 8081
      volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
  volumes:
    - name: nginx-config
      configMap:
        name: nginx-config
        items:
          - key: default.conf
            path: default.conf
    - name: access-token
      secret:
        secretName: access-token
        items:
          - key: token
            path: token
