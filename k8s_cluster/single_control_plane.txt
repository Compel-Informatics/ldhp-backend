# =======================================================================================================================================
# Project:     IPA | L-DHP (Lightweight-Data Hub Plattform)
# Pass-ID:     X9448776
# Author:      Atakan Ã‡etinkaya 
# Created:     24.04.2023
# Description: This .TXT (single_control_plane.txt) File is explaining how to Decide a Node to a "Control Plane" on the cluster
# File Name:   single_control_plane.txt
# Version: -
# v0.1 | Last Edit: 24.04.2023/09:30:15
# v0.2 | Last Edit: 24.04.2023/13:13:28
# v0.3 | Last Edit: 24.04.2023/13:30:54
# =======================================================================================================================================
-----------------------------------------------------------------------------------------------------------------------------------------
1.0) The "sudo apt-get install docker.io" command installs the Docker containerization platform on a Debian or Ubuntu Linux system.

NOTE: Execute command - "ON ALL NODES"

sudo apt-get install docker.io

-----------------------------------------------------------------------------------------------------------------------------------------
2.0) The Tigera Operator is a Kubernetes operator that simplifies the deployment and management of the Calico network security and 
     connectivity solution in Kubernetes clusters, enabling you to secure and connect your applications with ease.

NOTE: Execute both command's - "MASTER NODE"
---
kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.1/manifests/tigera-operator.yaml

2.1) The "custom-resources.yaml" file defines the custom resources that are necessary to fully configure and manage the Calico solution in 
a Kubernetes cluster. When this file is applied using kubectl create -f, it creates these custom resources in 
the Kubernetes API, enabling you to manage Calico components using Kubernetes-native tools and interfaces.

kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.1/manifests/custom-resources.yaml
-----------------------------------------------------------------------------------------------------------------------------------------
3.0) The "sudo kubeadm init --pod-network-cidr=192.168.0.0/16" command initializes a Kubernetes cluster with the specified Pod network 
     CIDR using kubeadm, which is a tool for bootstrapping Kubernetes clusters.

NOTE: Execute command - "MASTER NODE"

sudo kubeadm init --pod-network-cidr=192.168.0.0/16
-----------------------------------------------------------------------------------------------------------------------------------------
4.0) This is a series of commands used to configure the Kubernetes command-line tool kubectl to connect to a Kubernetes cluster that was 
     initialized using kubeadm.

NOTE: Execute command - "MASTER NODE"

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
-----------------------------------------------------------------------------------------------------------------------------------------
5.0) After doing step "3.0" you should be able to join with the Worker-Nodes into the Cluster through the "Token".

NOTE: Execute command - "WORKER NODES"

sudo kubeadm join 10.128.0.7:6443 --token m6v2c6.exxrfsgksqcf5tm \ --discovery-token-ca-cert-hash sha256:4890227f4cefd1cffd7dae7430ba1882c106086eaf3ccbd05c665afeb356f
-----------------------------------------------------------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------------------------------------------------------- #